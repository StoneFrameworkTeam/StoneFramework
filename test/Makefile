#############################################################################
# Makefile for building: test_Application
# Generated by qmake (2.01a) (Qt 4.6.2) on: Thu Mar 26 17:06:03 2015
# Project:  test_Application.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile test_Application.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = 
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4 -I../STFramework -I../STFramework/include -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		../STFramework/core/STCoreApplication.cpp \
		../STFramework/core/STObject.cpp \
		../STFramework/event/STEvent.cpp \
		../STFramework/thread/STThread.cpp \
		../STFramework/base/STWaiter.cpp \
		../STFramework/base/STGuard.cpp \
		../STFramework/base/STMutex.cpp \
		../STFramework/tools/STDataItem.cpp 
OBJECTS       = main.o \
		STCoreApplication.o \
		STObject.o \
		STEvent.o \
		STThread.o \
		STWaiter.o \
		STGuard.o \
		STMutex.o \
		STDataItem.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		test_Application.pro
QMAKE_TARGET  = test_Application
DESTDIR       = 
TARGET        = test_Application

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: test_Application.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile test_Application.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile test_Application.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/test_Application1.0.0 || $(MKDIR) .tmp/test_Application1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/test_Application1.0.0/ && $(COPY_FILE) --parents ../STFramework/include/core/STCoreApplication.h ../STFramework/include/core/STObject.h ../STFramework/include/event/STEvent.h ../STFramework/include/thread/STThread.h ../STFramework/include/base/STCommonDefine.h ../STFramework/include/base/STWaiter.h ../STFramework/include/base/STPtr.h ../STFramework/include/base/STGuard.h ../STFramework/include/base/STMutex.h ../STFramework/include/tools/STDataItem.h .tmp/test_Application1.0.0/ && $(COPY_FILE) --parents main.cpp ../STFramework/core/STCoreApplication.cpp ../STFramework/core/STObject.cpp ../STFramework/event/STEvent.cpp ../STFramework/thread/STThread.cpp ../STFramework/base/STWaiter.cpp ../STFramework/base/STGuard.cpp ../STFramework/base/STMutex.cpp ../STFramework/tools/STDataItem.cpp .tmp/test_Application1.0.0/ && (cd `dirname .tmp/test_Application1.0.0` && $(TAR) test_Application1.0.0.tar test_Application1.0.0 && $(COMPRESS) test_Application1.0.0.tar) && $(MOVE) `dirname .tmp/test_Application1.0.0`/test_Application1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/test_Application1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

main.o: main.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

STCoreApplication.o: ../STFramework/core/STCoreApplication.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o STCoreApplication.o ../STFramework/core/STCoreApplication.cpp

STObject.o: ../STFramework/core/STObject.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o STObject.o ../STFramework/core/STObject.cpp

STEvent.o: ../STFramework/event/STEvent.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o STEvent.o ../STFramework/event/STEvent.cpp

STThread.o: ../STFramework/thread/STThread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o STThread.o ../STFramework/thread/STThread.cpp

STWaiter.o: ../STFramework/base/STWaiter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o STWaiter.o ../STFramework/base/STWaiter.cpp

STGuard.o: ../STFramework/base/STGuard.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o STGuard.o ../STFramework/base/STGuard.cpp

STMutex.o: ../STFramework/base/STMutex.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o STMutex.o ../STFramework/base/STMutex.cpp

STDataItem.o: ../STFramework/tools/STDataItem.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o STDataItem.o ../STFramework/tools/STDataItem.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

